- Namespace kürzen -> SIFEI statt SIF.Visualization.Excel
- Dann kann auch wieder Excel statt MSExcel als Namespaceabkürzung für Microsoft.Office.Interop.Excel verwendet werden.
- DataModel entfernen und stattdessen WorkbookModel Singelton machen.
- WorkbookModel in Workbook umbenennen
- Für alle Views ein ViewModel erstellen, anstatt das Model zu verschmutzen.
	Details:
		Im Model sollten keine View spezifischen Daten gespeichert werden.
		Es sollte ein ViewModel für jeden View erstellt werden. Dort werden die Daten gehalten die der View benötigt.
		Diese Daten werden vom Model aus aktualisiert. Siehe auch MVVM (https://de.wikipedia.org/wiki/Model_View_ViewModel)
- ViewModel nutzen anstatt die Krücke mit dem Converter zu nutzen (die Konverter in eine Methode des jeweiligen ViewModels umwandeln)

Lösung für langsames GUI:
- statt hunderte Container einzufügen und zu löschen einen einzigen Container mit einem XAML Overlay laden. In diesem Overlay müssen dann die Icons für die Zellen so platziert werden, dass
ihre Position korrekt ist. Wahrscheinlich muss man den Zell-Positionsoffset für alle Zellen im ViewModel speichern und dann beim Anzeigen der Menüicons diese Position abfragen.
- Sidebar die Elemente dynamisch laden und anzeigen durch ein ViewModel, anstatt immer alle Violations zu laden
